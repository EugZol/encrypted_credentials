#!/usr/bin/env ruby

require 'optionparser'

require_relative '../lib/encrypted_credentials/coder'

options = {}

options[:in] = '/dev/stdin'
options[:out] = '/dev/stdout'

parser =
  OptionParser.new do |x|
    x.banner = "Usage: decrypt_credentials [options]"
    x.separator ""
    x.separator "Either -k or -f is required. Other options are optional."
    x.separator ""

    x.on('-i', '--in FILENAME', 'File with data to decrypt (omit to use STDIN)') { |o| options[:in] = o }
    x.on('-o', '--out FILENAME', 'File to write decrypted data (omit to use STDOUT)') { |o| options[:out] = o }
    x.on('-k', '--key KEY_HEX', 'Key (hex representation)') { |o| options[:key] = o }
    x.on('-f', '--keyfile KEY_FILE', 'Key file (with hex representation of the key)') { |o| options[:key] = File.read(o) }
  end

parser.parse!

key_hex = options[:key]
abort "Specify either -f or -k. See #{$0} --help" unless key_hex

data_bin = File.binread(options[:in])

File.write(options[:out], EncryptedCredentials::Coder.decrypt(data_bin, key_hex))
